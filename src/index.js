/**@format */

/*
 *
 * CVE finder, a bot that retrieve CVE.
 * Firstly created on March 2024, V1.0.0
 * by cadeneras(795326819346808832)(Melissa Gries)
 *
 */

//This is the start, nothing above, everything below !

const { Client, Events, GatewayIntentBits } = require("discord.js");
const dotenv = require("dotenv");

// Loading the .env file
dotenv.config();

//Using Sentry here => sentry.io
const Sentry = require("@sentry/node");
const { nodeProfilingIntegration } = require("@sentry/profiling-node");

//Setting the time for log...
let time = Date.now();
//...in a readable format
const currentDate = new Date(time).toISOString();
try {
    Sentry.init({
        dsn: process.env.DSN,
        integrations: [nodeProfilingIntegration()],
        // Performance Monitoring
        tracesSampleRate: 1.0, //  Capture 100% of the transactions
        // Set sampling rate for profiling - this is relative to tracesSampleRate
        profilesSampleRate: 1.0,
    });
    console.log("Connection to Sentry successfully established !");
} catch (error) {
    console.log(`${currentDate} => Error while initializing Sentry : ${error}`);
}

//Setting Sentry transaction
const transaction = Sentry.startTransaction({
    op: "CVE finder Transactions",
    name: "Transaction for CVE finder's monitoring.",
});

//Creating the client instance
const client = new Client({ intents: [GatewayIntentBits.Guilds] });

client.once(Events.ClientReady, (readyClient) => {
    console.log(
        `\n[CLIENT INFO] Time : ${readyClient.readyAt}. CVE finder is up, logged in as ${readyClient.user.tag} (${readyClient.user.id}), ready on ${readyClient.guilds.cache.size} servers!\n\n`
    );
});

try {
    client.login(process.env.TOKEN);
} catch (e) {
    //Handling errors
    console.log(`${currentDate} => Error while initializing connection : ${e}`);
    Sentry.captureException(e);
} finally {
    transaction.finish();
}

//Prevent from crashing on uncaught Exception from the try catch
process.on("uncaughtException", function (err) {
    Sentry.captureException(err);
    console.log(err && err.stack ? err.stack : err);
    console.log(
        `${currentDate} => Uncaught exception occurred:\n`,
        err && err.stack ? err.stack : err
    );
});

process.on("unhandledRejection", function (err) {
    Sentry.captureException(err);
    console.log(err && err.stack ? err.stack : err);
    console.log(
        `${currentDate} => Unhandled Rejection occurred:\n`,
        err && err.stack ? err.stack : err
    );
});
